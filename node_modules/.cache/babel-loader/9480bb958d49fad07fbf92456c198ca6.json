{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from './authService'; // Get user from localStorage\n\nconst user = JSON.parse(sessionStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n  role: ''\n}; // Register user\n\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    const message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = '';\n      state.role = '';\n    }\n  },\n  extraReducers: () => {}\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","sessionStorage","getItem","initialState","isError","isSuccess","isLoading","message","role","register","thunkAPI","error","response","data","toString","rejectWithValue","authSlice","name","reducers","reset","state","extraReducers","actions","reducer"],"sources":["/Users/youngsangkim/Documents/GitHub/YKStudio/front/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport authService from './authService'\n\n// Get user from localStorage\nconst user = JSON.parse(sessionStorage.getItem('user'))\n\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n  role: ''\n}\n\n// Register user\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  try {\n    return await authService.register(user)\n  } catch (error) {\n    const message = (error.response && error.response.data && error.response.data.message) || error.message || error.toString()\n    return thunkAPI.rejectWithValue(message)\n  }\n})\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: (state) => {\n      state.isLoading = false\n      state.isSuccess = false\n      state.isError = false\n      state.message = ''\n      state.role = ''\n    }\n  },\n  extraReducers: () => {}\n})\n\nexport const {reset} = authSlice.actions\nexport default authSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;;AACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,CAAb;AAEA,MAAMC,YAAY,GAAG;EACnBL,IAAI,EAAEA,IAAI,GAAGA,IAAH,GAAU,IADD;EAEnBM,OAAO,EAAE,KAFU;EAGnBC,SAAS,EAAE,KAHQ;EAInBC,SAAS,EAAE,KAJQ;EAKnBC,OAAO,EAAE,EALU;EAMnBC,IAAI,EAAE;AANa,CAArB,C,CASA;;AACA,OAAO,MAAMC,QAAQ,GAAGb,gBAAgB,CAAC,eAAD,EAAkB,OAAOE,IAAP,EAAaY,QAAb,KAA0B;EAClF,IAAI;IACF,OAAO,MAAMb,WAAW,CAACY,QAAZ,CAAqBX,IAArB,CAAb;EACD,CAFD,CAEE,OAAOa,KAAP,EAAc;IACd,MAAMJ,OAAO,GAAII,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeC,IAAjC,IAAyCF,KAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBN,OAA9D,IAA0EI,KAAK,CAACJ,OAAhF,IAA2FI,KAAK,CAACG,QAAN,EAA3G;IACA,OAAOJ,QAAQ,CAACK,eAAT,CAAyBR,OAAzB,CAAP;EACD;AACF,CAPuC,CAAjC;AASP,OAAO,MAAMS,SAAS,GAAGrB,WAAW,CAAC;EACnCsB,IAAI,EAAE,MAD6B;EAEnCd,YAFmC;EAGnCe,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAD,IAAW;MAChBA,KAAK,CAACd,SAAN,GAAkB,KAAlB;MACAc,KAAK,CAACf,SAAN,GAAkB,KAAlB;MACAe,KAAK,CAAChB,OAAN,GAAgB,KAAhB;MACAgB,KAAK,CAACb,OAAN,GAAgB,EAAhB;MACAa,KAAK,CAACZ,IAAN,GAAa,EAAb;IACD;EAPO,CAHyB;EAYnCa,aAAa,EAAE,MAAM,CAAE;AAZY,CAAD,CAA7B;AAeP,OAAO,MAAM;EAACF;AAAD,IAAUH,SAAS,CAACM,OAA1B;AACP,eAAeN,SAAS,CAACO,OAAzB"},"metadata":{},"sourceType":"module"}