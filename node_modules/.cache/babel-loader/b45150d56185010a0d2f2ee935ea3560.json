{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport authService from './authService'; // Get user from localStorage\n\nconst user = JSON.parse(sessionStorage.getItem('user'));\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n  role: ''\n}; // Register user\n\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  try {\n    return await authService.register(user);\n  } catch (error) {\n    console.log(error);\n    const message = error.response && error.response.data && error.response.data.message && error.response.data.error || error.message || error.toString();\n    return thunkAPI.rejectWithValue(message);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: state => {\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.isError = false;\n      state.message = '';\n      state.role = '';\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.user = action.payload;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.message = action.payload;\n      state.user = null;\n      state.role = '';\n    });\n  }\n});\nexport const {\n  reset\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authService","user","JSON","parse","sessionStorage","getItem","initialState","isError","isSuccess","isLoading","message","role","register","thunkAPI","error","console","log","response","data","toString","rejectWithValue","authSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","reducer"],"sources":["/Users/youngsangkim/Documents/GitHub/YKStudio/front/src/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport authService from './authService'\n\n// Get user from localStorage\nconst user = JSON.parse(sessionStorage.getItem('user'))\n\nconst initialState = {\n  user: user ? user : null,\n  isError: false,\n  isSuccess: false,\n  isLoading: false,\n  message: '',\n  role: ''\n}\n\n// Register user\nexport const register = createAsyncThunk('auth/register', async (user, thunkAPI) => {\n  try {\n    return await authService.register(user)\n  } catch (error) {\n    console.log(error)\n    const message = (error.response && error.response.data && error.response.data.message && error.response.data.error) || error.message || error.toString()\n    return thunkAPI.rejectWithValue(message)\n  }\n})\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    reset: (state) => {\n      state.isLoading = false\n      state.isSuccess = false\n      state.isError = false\n      state.message = ''\n      state.role = ''\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(register.pending, (state) => {\n        state.isLoading = true\n      })\n      .addCase(register.fulfilled, (state, action) => {\n        state.isLoading = false\n        state.isSuccess = true\n        state.user = action.payload\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.isLoading = false\n        state.isError = true\n        state.message = action.payload\n        state.user = null\n        state.role = ''\n      })\n  }\n})\n\nexport const {reset} = authSlice.actions\nexport default authSlice.reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;;AACA,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAX,CAAb;AAEA,MAAMC,YAAY,GAAG;EACnBL,IAAI,EAAEA,IAAI,GAAGA,IAAH,GAAU,IADD;EAEnBM,OAAO,EAAE,KAFU;EAGnBC,SAAS,EAAE,KAHQ;EAInBC,SAAS,EAAE,KAJQ;EAKnBC,OAAO,EAAE,EALU;EAMnBC,IAAI,EAAE;AANa,CAArB,C,CASA;;AACA,OAAO,MAAMC,QAAQ,GAAGb,gBAAgB,CAAC,eAAD,EAAkB,OAAOE,IAAP,EAAaY,QAAb,KAA0B;EAClF,IAAI;IACF,OAAO,MAAMb,WAAW,CAACY,QAAZ,CAAqBX,IAArB,CAAb;EACD,CAFD,CAEE,OAAOa,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACA,MAAMJ,OAAO,GAAII,KAAK,CAACG,QAAN,IAAkBH,KAAK,CAACG,QAAN,CAAeC,IAAjC,IAAyCJ,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBR,OAA7D,IAAwEI,KAAK,CAACG,QAAN,CAAeC,IAAf,CAAoBJ,KAA7F,IAAuGA,KAAK,CAACJ,OAA7G,IAAwHI,KAAK,CAACK,QAAN,EAAxI;IACA,OAAON,QAAQ,CAACO,eAAT,CAAyBV,OAAzB,CAAP;EACD;AACF,CARuC,CAAjC;AAUP,OAAO,MAAMW,SAAS,GAAGvB,WAAW,CAAC;EACnCwB,IAAI,EAAE,MAD6B;EAEnChB,YAFmC;EAGnCiB,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAD,IAAW;MAChBA,KAAK,CAAChB,SAAN,GAAkB,KAAlB;MACAgB,KAAK,CAACjB,SAAN,GAAkB,KAAlB;MACAiB,KAAK,CAAClB,OAAN,GAAgB,KAAhB;MACAkB,KAAK,CAACf,OAAN,GAAgB,EAAhB;MACAe,KAAK,CAACd,IAAN,GAAa,EAAb;IACD;EAPO,CAHyB;EAYnCe,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CACJC,OADH,CACWhB,QAAQ,CAACiB,OADpB,EAC8BJ,KAAD,IAAW;MACpCA,KAAK,CAAChB,SAAN,GAAkB,IAAlB;IACD,CAHH,EAIGmB,OAJH,CAIWhB,QAAQ,CAACkB,SAJpB,EAI+B,CAACL,KAAD,EAAQM,MAAR,KAAmB;MAC9CN,KAAK,CAAChB,SAAN,GAAkB,KAAlB;MACAgB,KAAK,CAACjB,SAAN,GAAkB,IAAlB;MACAiB,KAAK,CAACxB,IAAN,GAAa8B,MAAM,CAACC,OAApB;IACD,CARH,EASGJ,OATH,CASWhB,QAAQ,CAACqB,QATpB,EAS8B,CAACR,KAAD,EAAQM,MAAR,KAAmB;MAC7CN,KAAK,CAAChB,SAAN,GAAkB,KAAlB;MACAgB,KAAK,CAAClB,OAAN,GAAgB,IAAhB;MACAkB,KAAK,CAACf,OAAN,GAAgBqB,MAAM,CAACC,OAAvB;MACAP,KAAK,CAACxB,IAAN,GAAa,IAAb;MACAwB,KAAK,CAACd,IAAN,GAAa,EAAb;IACD,CAfH;EAgBD;AA7BkC,CAAD,CAA7B;AAgCP,OAAO,MAAM;EAACa;AAAD,IAAUH,SAAS,CAACa,OAA1B;AACP,eAAeb,SAAS,CAACc,OAAzB"},"metadata":{},"sourceType":"module"}