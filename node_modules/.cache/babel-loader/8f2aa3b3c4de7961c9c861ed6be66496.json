{"ast":null,"code":"var _jsxFileName = \"/Users/youngsangkim/Documents/GitHub/YKStudio/front/src/pages/account/ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = props => {\n  _s();\n\n  // States\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(''); // Handlers\n\n  const resetPasswordHandler = async e => {\n    e.preventDefault();\n    console.log(password, confirmPassword, 'clicked');\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if (password !== confirmPassword) {\n      setPassword('');\n      setConfirmPassword('');\n      setTimeout(() => {\n        setError('');\n      }, 5000);\n      return setError('Passwords does not match');\n    }\n\n    try {\n      let resetToken = window.location.pathname.slice(15);\n      const {\n        data\n      } = await axios.put(`${process.env.REACT_APP_SERVER_URL}/auth/resetpassword/${resetToken}`, {\n        password\n      }, config); // TODO: update sucess\n\n      console.log(data);\n    } catch (error) {\n      console.log(error);\n      setError(error.response);\n      setTimeout(() => {\n        setError('');\n      }, 5000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resetPw_container\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), !!error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 18\n    }, this) : null, !!success ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 20\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: resetPasswordHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Enter New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        placeholder: \"Confirm New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResetPassword, \"F8eFNaY9aMIFxMAhHi5sIKx7tKw=\");\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["useState","Link","axios","ResetPassword","props","password","setPassword","confirmPassword","setConfirmPassword","error","setError","success","setSuccess","resetPasswordHandler","e","preventDefault","console","log","config","header","setTimeout","resetToken","window","location","pathname","slice","data","put","process","env","REACT_APP_SERVER_URL","response","target","value"],"sources":["/Users/youngsangkim/Documents/GitHub/YKStudio/front/src/pages/account/ResetPassword.js"],"sourcesContent":["import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst ResetPassword = (props) => {\n\n  // States\n  const [ password, setPassword ] = useState('');\n  const [ confirmPassword, setConfirmPassword ] = useState('');\n  const [ error, setError ] = useState('');\n  const [ success, setSuccess ] = useState('');\n\n  // Handlers\n  const resetPasswordHandler = async (e) => {\n    e.preventDefault();\n    console.log(password, confirmPassword, 'clicked')\n\n    const config = {\n      header: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n\n    if(password !== confirmPassword) {\n      setPassword('');\n      setConfirmPassword('');\n      setTimeout(() => {\n        setError('');\n      },5000)\n      return setError('Passwords does not match')\n    }\n\n    try {\n      let resetToken = window.location.pathname.slice(15)\n      const { data } = await axios.put(`${process.env.REACT_APP_SERVER_URL}/auth/resetpassword/${resetToken}`, { password }, config)\n      // TODO: update sucess\n      console.log(data)\n    } catch (error) {\n      console.log(error)\n      setError(error.response);\n      setTimeout(() => {\n        setError('');\n      }, 5000)\n    }\n  }\n\n  return (\n    <div className='resetPw_container'>\n      <p>Reset Password</p>\n      {!!error ? <p><span>{error}</span></p> : null}\n      {!!success ? <p><span>{success}</span></p> : null}\n      <form onSubmit={resetPasswordHandler}>\n        <input \n          type='password'\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          placeholder='Enter New Password'\n        />\n        <input \n          type='password'\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.target.value)}\n          placeholder='Confirm New Password'\n        />\n        <button type='submit'>Reset Password</button>\n      </form>\n    </div>\n  );\n}\nexport default ResetPassword;"],"mappings":"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"},"metadata":{},"sourceType":"module"}